<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="InventoryApp.Views.InventoriesPage"
             xmlns:android="clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core"
             xmlns:custom="clr-namespace:InventoryApp"
             xmlns:local="clr-namespace:InventoryApp.ValueConverters"
             Title="Inventories">

    <ContentPage.Resources>
        <Color x:Key="GridHeaderBackgroundColorPrevious">White</Color> <!--#76B82A-->
        <Color x:Key="GridHeaderBackgroundColor">#aaa</Color>
        <Color x:Key="AccentColor">Black</Color> <!--#FF4081-->

        <ResourceDictionary>
            <local:IsSelectedToColorConverter x:Key="isSelectedToColor" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="New" Command="{Binding NewCommand}" Icon="ic_new.png"/>
        <ToolbarItem Text="Scan" Command="{Binding ScanCommand}" Icon="scan.png"/>
        <ToolbarItem Text="Search" Command="{Binding SearchCommand}" Icon="search.png"/>

        <ToolbarItem Text="Print" Command="{Binding PrintCommand}" Icon="print.png" Order="Secondary"/>
        <ToolbarItem Text="Increase / Discount" Command="{Binding RegisterTransactionCommand}" Order="Secondary"/>
        <ToolbarItem Text="Change Location" Command="{Binding ChangeLocationCommand}" Order="Secondary"/>
        <ToolbarItem Text="Update descriptor" Command="{Binding SaveListCommand}" Order="Secondary"/>
        <ToolbarItem Text="Save list" Command="{Binding SaveListCommand}" Order="Secondary"/>
        <ToolbarItem Text="Remove from list" Command="{Binding RemoveCommand}" Order="Secondary"/>
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <StackLayout Orientation="Vertical" Spacing="0">
            <Grid HorizontalOptions="FillAndExpand" Padding="0, 0, 0, 0" RowSpacing="1" ColumnSpacing="1" BackgroundColor="{StaticResource AccentColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="50" />
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="*" />
                    <ColumnDefinition  Width="60" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>

                <StackLayout Grid.Column="0" Grid.RowSpan="3" HorizontalOptions="FillAndExpand" BackgroundColor="{StaticResource GridHeaderBackgroundColor}" Margin="0,0,0,1">
                    <CheckBox  IsChecked="{Binding IsAllSelected}" HorizontalOptions="CenterAndExpand"  VerticalOptions="CenterAndExpand"/>
                </StackLayout>

                <Label Grid.Column="1" Grid.Row="0" Text=" Acc. Number" FontAttributes="Bold" TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>
                <Label Grid.Column="1" Grid.Row="1" Text=" Acc. Name" FontAttributes="Bold" LineBreakMode="TailTruncation" TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>
                <Label Grid.Column="2" Grid.Row="0" Text=" Inventory Id/Lot Id" FontAttributes="Bold" LineBreakMode="TailTruncation" TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>
                <Label Grid.Column="2" Grid.Row="1" Text=" Col Number" FontAttributes="Bold" LineBreakMode="TailTruncation" TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>
                <Label Grid.Column="3" Grid.Row="0" Text=" Quantity" FontAttributes="Bold" LineBreakMode="TailTruncation" TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>
                <Label Grid.Column="3" Grid.Row="1" Text=" Unit" FontAttributes="Bold" LineBreakMode="TailTruncation" TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>

                <Label Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" Text=" Location" FontAttributes="Bold" LineBreakMode="TailTruncation" Margin="0,0,0,1"
                       TextColor="{StaticResource AccentColor}" BackgroundColor="{StaticResource GridHeaderBackgroundColor}"/>
            </Grid>

            <ListView ItemsSource="{Binding InventoryList}" SelectedItem="{Binding SelectedInventory}" HasUnevenRows="True" SelectionMode="None"
                      VerticalOptions="FillAndExpand" BackgroundColor="White" CachingStrategy="RecycleElementAndDataTemplate"
                      x:Name="InventoryList" >

                <!--<ListView.Behaviors>
                    <prism:EventToCommandBehavior EventName="ItemTapped" Command="{Binding ItemTappedCommand}" EventArgsParameterPath="Item" />
                </ListView.Behaviors>-->

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell >
                            <ViewCell.ContextActions>
                                <MenuItem Command="{Binding RemoveItem}" CommandParameter="{Binding .}" Text="More" />
                                <MenuItem Command="{Binding RemoveItem}" CommandParameter="{Binding .}" Text="Delete" IsDestructive="True" />
                            </ViewCell.ContextActions>

                            <StackLayout Orientation="Horizontal" Spacing="0" BackgroundColor="{Binding Path=IsSelected, Converter={StaticResource isSelectedToColor}}">
                                <!--Grid.Row="0"  Grid.Column="0" Grid.RowSpan="3"-->
                                <StackLayout HorizontalOptions="Fill"  Padding="0" Margin="0" WidthRequest="50" >
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.SelectItemCommand, Source={x:Reference InventoryList}}" CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>
                                    <custom:MyCheckbox IsChecked="{Binding IsSelected}" HorizontalOptions="Center"  VerticalOptions="CenterAndExpand" InputTransparent="True" />
                                </StackLayout>

                                <Grid HorizontalOptions="FillAndExpand" Padding="0,4" RowSpacing="0" ColumnSpacing="0"  >
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.ItemTappedCommand, Source={x:Reference InventoryList}}" CommandParameter="{Binding Item}"/>
                                    </Grid.GestureRecognizers>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="0" />
                                        <ColumnDefinition  Width="*" />
                                        <ColumnDefinition  Width="*" />
                                        <ColumnDefinition  Width="60" />
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="0" Grid.Column="1"  Text="{Binding Item.AccessionNumber}" FontAttributes="Bold" />
                                    <Label Grid.Row="0" Grid.Column="2"  Text="{Binding Item.inventory_number}" LineBreakMode="TailTruncation" />
                                    <Label Grid.Row="0" Grid.Column="3"  Text="{Binding Item.quantity_on_hand, StringFormat='{0:F0}'}" />

                                    <Label Grid.Row="1" Grid.Column="1"  Text="{Binding Item.plant_name1}" LineBreakMode="TailTruncation" />
                                    <Label Grid.Row="1" Grid.Column="2"  Text="{Binding Item.plant_name2}" LineBreakMode="TailTruncation" />
                                    <Label Grid.Row="1" Grid.Column="3"  Text="{Binding Item.quantity_on_hand_unit_code}" LineBreakMode="TailTruncation" />

                                    <Label Grid.Row="2" Grid.Column="1"  Grid.ColumnSpan="3" Text="{Binding Item.Location}" LineBreakMode="TailTruncation"/>
                                </Grid>
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <StackLayout Orientation="Horizontal" BackgroundColor="Gray" HeightRequest="32">
                <Label Text="{Binding InventoryList.Count, StringFormat=' Inventories : {0}'}" TextColor="White" VerticalOptions="Center"/>
                <Label Text="{Binding AccessionCount, StringFormat='Accessions : {0}'}" TextColor="White" VerticalOptions="Center"/>
                <Label Text="{Binding SelectedRowsCount, StringFormat='Selected inventories : {0}'}" TextColor="White" VerticalOptions="Center"/>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>

</ContentPage>